version: 2
jobs:
  build-arm-base-qemu-image:
    working_directory: /app
    docker:
      - image: docker:17.12.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VERSION=${CIRCLE_TAG} \
              --build-arg VCS_URL=${CIRCLE_REPOSITORY_URL} \
              --build-arg VCS_REF=${CIRCLE_SHA1} \
              --build-arg BASE_IMAGE_NAMESPACE=arm32v6/ \
              --build-arg BASE_IMAGE=alpine \
              --build-arg BASE_IMAGE_TAG="3.7" \
              -t ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-base .
      - run:
          name: Login to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Tag Image and Push
          command: |
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-base
            docker tag ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-base ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:3.7-arm-base
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:3.7-arm-base
  build-arm-raspian-qemu-image:
    working_directory: /app
    docker:
      - image: docker:17.12.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VERSION=${CIRCLE_TAG} \
              --build-arg VCS_URL=${CIRCLE_REPOSITORY_URL} \
              --build-arg VCS_REF=${CIRCLE_SHA1} \
              --build-arg BASE_IMAGE_NAMESPACE=resin/ \
              --build-arg BASE_IMAGE=rpi-raspbian
              --build-arg BASE_IMAGE_TAG="jessie" \
              -t ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-raspian .
      - run:
          name: Login to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Tag Image and Push
          command: |
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-raspian
            docker tag ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-raspian ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:3.7-arm-raspian
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:jessie-arm-raspian
  build-arm-node-qemu-image:
    working_directory: /app
    docker:
      - image: docker:17.12.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VERSION=${CIRCLE_TAG} \
              --build-arg VCS_URL=${CIRCLE_REPOSITORY_URL} \
              --build-arg VCS_REF=${CIRCLE_SHA1} \
              --build-arg BASE_IMAGE_NAMESPACE=arm32v6/ \
              --build-arg BASE_IMAGE=node \
              --build-arg BASE_IMAGE_TAG="8.9-alpine" \
              -t ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-node .
      - run:
          name: Login to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Tag Image and Push
          command: |
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-node
            docker tag ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-node ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:8.9-alpine-arm-node
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:8.9-alpine-arm-node
  build-arm-openjdk-qemu-image:
    working_directory: /app
    docker:
      - image: docker:17.12.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VERSION=${CIRCLE_TAG} \
              --build-arg VCS_URL=${CIRCLE_REPOSITORY_URL} \
              --build-arg VCS_REF=${CIRCLE_SHA1} \
              --build-arg BASE_IMAGE_NAMESPACE=arm32v6/ \
              --build-arg BASE_IMAGE=openjdk \
              --build-arg BASE_IMAGE_TAG="8-jre-alpine3.7" \
              -t ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-openjdk .
      - run:
          name: Login to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Tag Image and Push
          command: |
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-openjdk
            docker tag ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}-arm-openjdk ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:8-jre-alpine3.7-arm-openjdk
            docker push ${DOCKER_IMAGE_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:8-jre-alpine3.7-arm-openjdk
  post-deploy:
    working_directory: /app
    docker:
      - image: docker:17.12.0-ce-git
    steps:
      - setup_remote_docker
      - run:
          name: Update Micro Badger
          command: |
            set +o pipefail
            apk add --no-cache curl
            curl -X POST $MICROBADGER_WEBHOOK
workflows:
  version: 2
  build:
    jobs:
      - build-arm-base-qemu-image:
          filters:
            tags:
              only: /.*/
      - build-arm-raspian-qemu-image:
          filters:
            tags:
              only: /.*/
      - build-arm-node-qemu-image:
          filters:
            tags:
              only: /.*/
      - build-arm-openjdk-qemu-image:
          filters:
            tags:
              only: /.*/
      - post-deploy:
          requires:
            - build-arm-base-qemu-image
            - build-arm-raspian-qemu-image
            - build-arm-node-qemu-image
            - build-arm-openjdk-qemu-image
